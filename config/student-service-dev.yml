spring:
    datasource:
        password: ${DB_PASSWORD:awhjw}
        username: ${DB_USER:postgres}
        url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:student_dev}?createDatabaseIfNotExist=true&useSSL=false
        jpa.hibernate.ddl-auto: update

    flyway:
        locations:
            - classpath:/db-migrate
            - classpath:/db-migrate
        schemas:
            - hutech
            - hcmute
        enabled: false
#
#  eureka:
#    client:
#      serviceUrl:
#        defaultZone: ${EUREKA_URI:http://localhost:8761/eureka}
#    instance:
#      preferIpAddress: true
#      instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
#
#  management:
#    endpoints:
#      web:
#        exposure:
#          include: '*'
#    endpoint.health.show-details: always
#
#    kafka:
#        bootstrap-servers: ${KAFKA_URL:localhost:9092}
#        producer:
#        key-serializer: org.apache.kafka.common.serialization.StringSerializer
#        value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
#
#        consumer:
#        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#        value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
#        group-id: 'tuan'
#        auto-offset-reset: earliest
#
#        properties:
#        spring.json.type.mapping: student:kr.co.metanet.studentservice.model.Student
#        template:
#        default-topic: 'student-mq'

security:
    oauth2:
        resource:
            jwt:
                key-store: classpath:/key-for-jwt.jks
                key-password: P@ss
                key-alias: aliasname
                key-store-password: pAss
